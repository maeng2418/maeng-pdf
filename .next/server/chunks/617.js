"use strict";exports.id=617,exports.ids=[617],exports.modules={74617:(a,b,c)=>{c.d(b,{PDFSplitter:()=>e});var d=c(97416);class e{static async splitPDF(a,b){let c=await a.arrayBuffer(),e=await d.PDFDocument.load(c),f=e.getPageCount(),g=a.name.replace(".pdf","");switch(b.mode){case"single":return this.splitIntoSinglePages(e,g,f);case"pages":return this.splitByPagesPerFile(e,g,f,b.pagesPerFile||1);case"range":return this.splitByRanges(e,g,b.ranges||"");default:throw Error("잘못된 분할 모드입니다.")}}static async splitIntoSinglePages(a,b,c){let e=[];for(let f=0;f<c;f++){let c=await d.PDFDocument.create(),[g]=await c.copyPages(a,[f]);c.addPage(g);let h=new Blob([new Uint8Array(await c.save())],{type:"application/pdf"});e.push({fileName:`${b}_page${f+1}.pdf`,blob:h,pageInfo:`${f+1}`})}return e}static async splitByPagesPerFile(a,b,c,e){let f=[],g=1;for(let h=0;h<c;h+=e){let i=Math.min(h+e-1,c-1),j=Array.from({length:i-h+1},(a,b)=>h+b),k=await d.PDFDocument.create();for(let b of(await k.copyPages(a,j)))k.addPage(b);let l=new Blob([new Uint8Array(await k.save())],{type:"application/pdf"});f.push({fileName:`${b}_part${g}.pdf`,blob:l,pageInfo:`${h+1}-${i+1}`}),g++}return f}static async splitByRanges(a,b,c){let e=[],f=c.split(",").map(a=>a.trim());for(let c=0;c<f.length;c++){let g=f[c],h=this.parsePageRange(g);if(0===h.length)continue;let i=await d.PDFDocument.create();for(let b of(await i.copyPages(a,h)))i.addPage(b);let j=new Blob([new Uint8Array(await i.save())],{type:"application/pdf"});e.push({fileName:`${b}_range${c+1}.pdf`,blob:j,pageInfo:g})}return e}static parsePageRange(a){let b=[];if(a.includes("-")){let[c,d]=a.split("-").map(a=>parseInt(a.trim())-1);if(!isNaN(c)&&!isNaN(d)&&c<=d)for(let a=c;a<=d;a++)b.push(a)}else{let c=parseInt(a.trim())-1;isNaN(c)||b.push(c)}return b}static async getPDFInfo(a){try{let b=await a.arrayBuffer(),c=(await d.PDFDocument.load(b)).getPageCount(),e=`${(a.size/1024/1024).toFixed(2)} MB`;return{pageCount:c,size:e}}catch(a){throw Error("PDF 파일 정보를 가져올 수 없습니다.")}}}}};